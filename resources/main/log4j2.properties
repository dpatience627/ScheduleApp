name=PropertiesConfig
#This is the name of the folder that will be generated
property.filename = logs
#Appenders are the types/properties for the log files
appenders = console, searchCourses, SemesterSchLog, DriverLog
#Console is the root logger
#(i.e. if you call LogManager.getLogger() you can adjust just the console output for that file)
#Otherwise to use a different logger, put the name as a string in getLogger
rootLogger=console

#Console Properties (type: console, the name is used later)
appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n

#CourseSearch Logger, RollingFile is used so that if it gets too large it will create a backup
appender.searchCourses.type = RollingFile
appender.searchCourses.name = CourseSearch
appender.searchCourses.fileName=${filename}/courseSearchLogs.log
appender.searchCourses.layout.type=PatternLayout
appender.searchCourses.filePattern = ${filename}/backup-%d{MM-dd-yy-HH-mm-ss}.log
appender.searchCourses.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n
appender.searchCourses.Policies.type = Policies
appender.searchCourses.Policies.size.type = SizeBasedTriggeringPolicy
appender.searchCourses.Policies.size.size = 1MB
appender.searchCourses.strategy.type = DefaultRolloverStrategy
appender.searchCourses.strategy.max = 20

#Dictates how much will be let in (0ff, fatal, warn, debug, info, all)
logger.searchCourses.name= searchCourses
logger.searchCourses.level = info
logger.searchCourses.appenderRef.searchCourses.ref = CourseSearch
#print to console as well?
logger.searchCourses.additivity = true

#Semester Schedule Logger
appender.SemesterSchLog.type = RollingFile
appender.SemesterSchLog.name = SemesterSchLog
appender.SemesterSchLog.fileName=${filename}/SemesterSchLogs.log
appender.SemesterSchLog.layout.type=PatternLayout
appender.SemesterSchLog.filePattern = ${filename}/backup-%d{MM-dd-yy-HH-mm-ss}.log
appender.SemesterSchLog.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n
appender.SemesterSchLog.Policies.type = Policies
appender.SemesterSchLog.Policies.size.type = SizeBasedTriggeringPolicy
appender.SemesterSchLog.Policies.size.size = 1MB
appender.SemesterSchLog.strategy.type = DefaultRolloverStrategy
appender.SemesterSchLog.strategy.max = 20

#Semester schedule prop
logger.SemesterSchLog.name= SemesterSchLog
logger.SemesterSchLog.level = info
logger.SemesterSchLog.appenderRef.searchCourses.ref = SemesterSchLog
#print to console as well?
logger.SemesterSchLog.additivity = true

#Semester Schedule Logger
appender.DriverLog.type = RollingFile
appender.DriverLog.name = DriverLog
appender.DriverLog.fileName=${filename}/DriverLogs.log
appender.DriverLog.layout.type=PatternLayout
appender.DriverLog.filePattern = ${filename}/backup-%d{MM-dd-yy-HH-mm-ss}.log
appender.DriverLog.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n
appender.DriverLog.Policies.type = Policies
appender.DriverLog.Policies.size.type = SizeBasedTriggeringPolicy
appender.DriverLog.Policies.size.size = 1MB
appender.DriverLog.strategy.type = DefaultRolloverStrategy
appender.DriverLog.strategy.max = 20

#Semester schedule prop
logger.DriverLog.name= DriverLog
logger.DriverLog.level = info
logger.DriverLog.appenderRef.searchCourses.ref = DriverLog
#print to console as well?
logger.DriverLog.additivity = true


#level indicates how much to see in console
#levels are (in order of severity): off, fatal, error, warn, info, debug, trace, all
#Will include all levels above (i.e. info will include warn, error, and fatal)
rootLogger.level = off
rootLogger.appenderRefs = console
rootLogger.appenderRef.stdout.ref = STDOUT